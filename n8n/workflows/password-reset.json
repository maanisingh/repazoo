{
  "name": "Password Reset Request",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "password-reset",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-reset",
      "name": "Webhook: Reset Request",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        240,
        300
      ],
      "webhookId": "password-reset"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT id, email FROM users WHERE email = '{{ $json.email }}'",
        "options": {}
      },
      "id": "find-user",
      "name": "Find User",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        460,
        300
      ],
      "credentials": {
        "postgres": {
          "id": "l4mcv4XhAixvuZBL",
          "name": "Repazoo PostgreSQL"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $input.all().length }}",
              "value2": 1,
              "operation": "equal"
            }
          ]
        }
      },
      "id": "user-found",
      "name": "User Found?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "const user = $input.all()[0].json;\nconst resetToken = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n\nreturn [{\n  json: {\n    ...user,\n    reset_token: resetToken,\n    expires_at: new Date(Date.now() + 60 * 60 * 1000).toISOString()\n  }\n}];"
      },
      "id": "generate-reset-token",
      "name": "Generate Reset Token",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        900,
        200
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE users SET reset_token = '{{ $json.reset_token }}', reset_token_expires = '{{ $json.expires_at }}' WHERE id = {{ $json.id }} RETURNING email",
        "options": {}
      },
      "id": "save-token",
      "name": "Save Reset Token",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1120,
        200
      ],
      "credentials": {
        "postgres": {
          "id": "l4mcv4XhAixvuZBL",
          "name": "Repazoo PostgreSQL"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { success: true, message: 'Password reset link sent to email', reset_token: $('Generate Reset Token').item.json.reset_token } }}"
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1340,
        200
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseCode": 404,
        "responseBody": "={{ { success: false, error: 'User not found' } }}"
      },
      "id": "error-response",
      "name": "Error: Not Found",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        900,
        400
      ]
    }
  ],
  "connections": {
    "Webhook: Reset Request": {
      "main": [
        [
          {
            "node": "Find User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find User": {
      "main": [
        [
          {
            "node": "User Found?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "User Found?": {
      "main": [
        [
          {
            "node": "Generate Reset Token",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error: Not Found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Reset Token": {
      "main": [
        [
          {
            "node": "Save Reset Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Reset Token": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null
}
